(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{166:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"常用-js-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用-js-api","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用 JS API")]),t._v(" "),s("h2",{attrs:{id:"string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string","aria-hidden":"true"}},[t._v("#")]),t._v(" String")]),t._v(" "),s("ul",[s("li",[t._v("lengh")]),t._v(" "),s("li",[t._v("toUpperCase()")]),t._v(" "),s("li",[t._v("toLowerCase()")]),t._v(" "),s("li",[t._v("charAt(index)\n"),s("ul",[s("li",[t._v("index: 0 ~ length - 1")]),t._v(" "),s("li",[t._v("返回指定位置的字符")])])]),t._v(" "),s("li",[t._v("indexOf(searchValue, fromIndex)\n"),s("ul",[s("li",[t._v("searchValue: 查找的子串")]),t._v(" "),s("li",[t._v("fromIndex: 可选，开始查找的位置，默认 0")]),t._v(" "),s("li",[t._v("返回指定值第一次出现的索引，没查到则返回 -1")])])]),t._v(" "),s("li",[t._v("lastIndexOf(searchValue, fromIndex)\n"),s("ul",[s("li",[t._v("从 fromIndex 往左查找")]),t._v(" "),s("li",[t._v("fromIndex 可选，默认值是 +Infinity")])])]),t._v(" "),s("li",[t._v("split(separator, limit)\n"),s("ul",[s("li",[t._v("separator: 分隔符，为字符串或正则")]),t._v(" "),s("li",[t._v("limit: 限定返回的分割段数量")]),t._v(" "),s("li",[t._v("返回分割的数组")])])]),t._v(" "),s("li",[t._v("substring(indexStart, indexEnd)\n"),s("ul",[s("li",[t._v("indexEnd: 省略则提取到最后")])])]),t._v(" "),s("li",[t._v("substr(start, length)\n"),s("ul",[s("li",[t._v("start: 可为负数， -2 即从倒数第二个开始")]),t._v(" "),s("li",[t._v("length: 提取的数量，省略则提取到末尾")])])]),t._v(" "),s("li",[t._v("trim()")]),t._v(" "),s("li",[t._v("trimLeft()")]),t._v(" "),s("li",[t._v("trimRight()")]),t._v(" "),s("li",[t._v("concat(str1, str2, ...)")]),t._v(" "),s("li",[t._v("includes(searchString, position)\n"),s("ul",[s("li",[t._v("position: 可选，默认从 0 开始")])])]),t._v(" "),s("li",[t._v("padStart(targetLength, padString)")]),t._v(" "),s("li",[t._v("padEnd(targetLength, padString)")])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("padStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "       abc"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("padStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "foofoofabc"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("padStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123465"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "123abc"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("padStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "00000abc"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("padStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "abc"')]),t._v("\n")])])]),s("h2",{attrs:{id:"array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array","aria-hidden":"true"}},[t._v("#")]),t._v(" Array")]),t._v(" "),s("h3",{attrs:{id:"会改变自身的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#会改变自身的方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 会改变自身的方法")]),t._v(" "),s("ul",[s("li",[t._v("push(e1, e2, ...)   "),s("em",[t._v("返回数组新长度")])]),t._v(" "),s("li",[t._v("pop()    "),s("em",[t._v("返回删除的元素")])]),t._v(" "),s("li",[t._v("shift()   "),s("em",[t._v("删除第一个元素，返回这个元素")])]),t._v(" "),s("li",[t._v("unshift(e1, e2, ...)   "),s("em",[t._v("返回数组新长度")])]),t._v(" "),s("li",[t._v("reverse()")]),t._v(" "),s("li",[t._v("sort(compareFunction)\n"),s("ul",[s("li",[t._v("compareFunction 可选， 默认排序顺序是在将元素转换为字符串，然后比较它们的UTF-16代码单元值序列时构建的")])])]),t._v(" "),s("li",[t._v("splice(start, deleteCount, item1, item2, ...)\n"),s("ul",[s("li",[t._v("从 start 位置开始删掉 deleteCount 个元素， 并插入 item1, item2,...")]),t._v(" "),s("li",[t._v("只删除的话 item1 及之后不传， 只插入的话 deleteCount 传 0")]),t._v(" "),s("li",[t._v("返回被删除的元素组成的数组")])])]),t._v(" "),s("li",[t._v("fill(value, start, end)\n"),s("ul",[s("li",[t._v("start 可选，默认 0")]),t._v(" "),s("li",[t._v("end 可选，默认 this.length")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sort 示例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 100000, 21, 30, 4]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 4, 21, 30, 100000]")]),t._v("\n")])])]),s("h3",{attrs:{id:"不改变自身的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不改变自身的方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 不改变自身的方法")]),t._v(" "),s("ul",[s("li",[t._v("indexOf(searchElement, fromIndex)\n"),s("ul",[s("li",[t._v("fromIndex 可选，默认 0")]),t._v(" "),s("li",[t._v("返回首个被找到的元素在数组中的索引位置; 若没有找到则返回 -1")])])]),t._v(" "),s("li",[t._v("lastIndexOf()\n"),s("ul",[s("li",[t._v("从 fromIndex 往左找")])])]),t._v(" "),s("li",[t._v("concat(v1, v2, ...)   "),s("em",[t._v("将数组或值连接成新数组")])]),t._v(" "),s("li",[t._v("join(separator)   "),s("em",[t._v("separator 缺省则为 "),s("code",[t._v(",")])])]),t._v(" "),s("li",[t._v("slice(begin, end)")]),t._v(" "),s("li",[t._v("toString()")])]),t._v(" "),s("h3",{attrs:{id:"遍历方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遍历方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 遍历方法")]),t._v(" "),s("ul",[s("li",[t._v("forEach(callback, thisArg)   "),s("em",[t._v("遍历， 返回 undefined")]),t._v(" "),s("ul",[s("li",[t._v("callback(currentValue, index, array)")])])]),t._v(" "),s("li",[t._v("some()   "),s("em",[t._v("如果数组中至少有一个元素满足测试函数，则返回 true，否则返回 false")])]),t._v(" "),s("li",[t._v("every()   "),s("em",[t._v("如果数组中的每个元素都满足测试函数，则返回 true，否则返回 false")])]),t._v(" "),s("li",[t._v("map()   "),s("em",[t._v("返回一个由回调函数的返回值组成的新数组")])]),t._v(" "),s("li",[t._v("filter()   "),s("em",[t._v("将所有在过滤函数中返回 true 的数组元素放进一个新数组中并返回")])]),t._v(" "),s("li",[t._v("reduce(callback, initialValue)\n"),s("ul",[s("li",[t._v("callback(accumulator, currentValue, index, array)")]),t._v(" "),s("li",[t._v("从左到右为每个数组元素执行一次回调函数，并把上次回调函数的返回值放在一个暂存器中传给下次回调函数，并返回最后一次回调函数的返回值。")])])]),t._v(" "),s("li",[t._v("reduceRight()")]),t._v(" "),s("li",[t._v("find(callback(element, index, array), thisArg)   "),s("em",[t._v("返回数组中第一个满足所提供测试函数的元素的值，否则返回 undefined")])]),t._v(" "),s("li",[t._v("findIndex(callback, thisArg)  "),s("em",[t._v("返回数组中满足提供的测试函数的第一个元素的索引。否则返回-1")])])]),t._v(" "),s("h2",{attrs:{id:"regexp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#regexp","aria-hidden":"true"}},[t._v("#")]),t._v(" RegExp")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://shenxinle.github.io/jekyll/update/2015/03/11/RegExp-in-JavaScript",target:"_blank",rel:"noopener noreferrer"}},[t._v("RegExp"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"math"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math","aria-hidden":"true"}},[t._v("#")]),t._v(" Math")])])}),[],!1,null,null,null);a.default=e.exports}}]);