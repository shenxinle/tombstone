(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{136:function(t,a,e){t.exports=e.p+"assets/img/cacheControl1.a4a8d7cf.jpg"},137:function(t,a,e){t.exports=e.p+"assets/img/cacheControl2.19a12d3a.jpg"},138:function(t,a,e){t.exports=e.p+"assets/img/cache.eceb16f9.png"},139:function(t,a,e){t.exports=e.p+"assets/img/timing.76198e07.png"},140:function(t,a,e){t.exports=e.p+"assets/img/render.bc7e46a4.png"},141:function(t,a,e){t.exports=e.p+"assets/img/defer.20475382.png"},145:function(t,a,e){"use strict";e.r(a);var s=e(0),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"前端性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 前端性能优化")]),t._v(" "),s("h2",{attrs:{id:"缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存","aria-hidden":"true"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("本地数据缓存")]),t._v(" "),s("ul",[s("li",[t._v("单页应用内存数据缓存")]),t._v(" "),s("li",[t._v("cookie, localStorage / sessionStorage, indexedDB")])])]),t._v(" "),s("li",[s("p",[t._v("Service Worker")]),t._v(" "),s("ul",[s("li",[t._v("独立线程， 请求拦截")]),t._v(" "),s("li",[t._v("可以让我们自由控制缓存哪些文件、如何匹配缓存、如何读取缓存，并且缓存是持续性的")])])]),t._v(" "),s("li",[s("p",[t._v("Memory Cache")]),t._v(" "),s("ul",[s("li",[t._v("Network Size 显示 from memory cache")]),t._v(" "),s("li",[t._v("高效，持续时间短， 关闭 tab 页之后缓存失效")])])]),t._v(" "),s("li",[s("p",[t._v("Disk Cache")]),t._v(" "),s("ul",[s("li",[t._v("Network Size 显示 from disk cache")]),t._v(" "),s("li",[t._v("缓存到硬盘，容量大")])])]),t._v(" "),s("li",[s("p",[t._v("Push Cache")]),t._v(" "),s("ul",[s("li",[t._v("HTTP/2 推送的资源")])])]),t._v(" "),s("li",[s("p",[t._v("缓存 HTTP Header 设置")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("强缓存相关的有 Expires 和 Cache-Control, NetWork 中可以看到 200（from memory cache 或 from disk cache）")])]),t._v(" "),s("li",[s("p",[t._v("Expires")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("expires: Wed, 02 Oct 2019 06:16:30 GMT")])]),t._v(" "),s("li",[t._v("指定资源到期时间， 是 HTTP/1 的产物")])])]),t._v(" "),s("li",[s("p",[t._v("Cache-Control")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("HTTP/1.1 的产物， 与 Expires 同时存在时优先级高于 Expires")])]),t._v(" "),s("li",[s("p",[t._v("例: "),s("code",[t._v("cache-control: max-age=600")]),t._v(", 单位为秒")])]),t._v(" "),s("li",[s("p",[t._v("详细取值")]),t._v(" "),s("p",[s("img",{attrs:{src:e(136),alt:"cache-control"}})]),t._v(" "),s("p",[s("img",{attrs:{src:e(137),alt:"cache-control"}})])])])]),t._v(" "),s("li",[s("p",[t._v("协商缓存是强制缓存失效后，浏览器携带缓存标识向服务器发起请求，由服务器根据缓存标识决定是否使用缓存的过程")]),t._v(" "),s("ul",[s("li",[t._v("协商缓存生效，返回304，Not Modified")]),t._v(" "),s("li",[t._v("协商缓存失效，返回200和请求结果")]),t._v(" "),s("li",[t._v("通过 Last-Modified / If-Modified-Since 或 ETag / If-None-Match 设置")])])]),t._v(" "),s("li",[s("p",[t._v("Last-Modified / If-Modified-Since")]),t._v(" "),s("ul",[s("li",[t._v("response header: "),s("code",[t._v("last-modified: Mon, 30 Sep 2019 16:46:39 GMT")])]),t._v(" "),s("li",[t._v("request header: "),s("code",[t._v("if-modified-since: Mon, 30 Sep 2019 16:46:39 GMT")])]),t._v(" "),s("li",[t._v("浏览器下一次请求这个资源，浏览器检测到有 Last-Modified这个header，于是添加If-Modified-Since这个header，值就是Last-Modified中的值；服务器再次收到这个资源请求，会根据 If-Modified-Since 中的值与服务器中这个资源的最后修改时间对比，如果没有变化，返回304和空的响应体，直接从缓存读取，如果If-Modified-Since的时间小于服务器中这个资源的最后修改时间，说明文件有更新，于是返回新的资源文件和200")]),t._v(" "),s("li",[t._v("弊端\n"),s("ul",[s("li",[t._v("如果本地打开缓存文件，即使没有对文件进行修改，但还是会造成 Last-Modified 被修改，服务端不能命中缓存导致发送相同的资源")]),t._v(" "),s("li",[t._v("因为 Last-Modified 只能以秒计时，如果在不可感知的时间内修改完成文件，那么服务端会认为资源还是命中了，不会返回正确的资源")])])])])]),t._v(" "),s("li",[s("p",[t._v("ETag / If-None-Match")]),t._v(" "),s("ul",[s("li",[t._v("response header: "),s("code",[t._v('etag: W/"5d92316f-1a7d1"')])]),t._v(" "),s("li",[t._v("request header: "),s("code",[t._v('if-none-match: W/"5d92316f-1a7d1"')])]),t._v(" "),s("li",[t._v("Etag是服务器响应请求时，返回当前资源文件的一个唯一标识(由服务器生成)，只要资源有变化，Etag就会重新生成。")])])]),t._v(" "),s("li",[s("p",[t._v("Last-Modified 与 ETag 对比")]),t._v(" "),s("ul",[s("li",[t._v("在精确度上，Etag要优于Last-Modified。 Last-Modified的时间单位是秒，如果某个文件在1秒内改变了多次，那么他们的Last-Modified其实并没有体现出来修改，但是Etag每次都会改变确保了精度；如果是负载均衡的服务器，各个服务器生成的Last-Modified也有可能不一致。")]),t._v(" "),s("li",[t._v("在性能上，Etag要逊于Last-Modified，毕竟Last-Modified只需要记录时间，而Etag需要服务器通过算法来计算出一个hash值。")]),t._v(" "),s("li",[t._v("在优先级上，服务器校验优先考虑Etag。")])])])])]),t._v(" "),s("li",[s("p",[t._v("http 缓存流程")]),t._v(" "),s("p",[s("img",{attrs:{src:e(138),alt:"cache"}})])])]),t._v(" "),s("h2",{attrs:{id:"发送请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发送请求","aria-hidden":"true"}},[t._v("#")]),t._v(" 发送请求")]),t._v(" "),s("ul",[s("li",[t._v("避免多余重定向")]),t._v(" "),s("li",[t._v("DNS 预解析\n"),s("ul",[s("li",[s("code",[t._v('<link rel="dns-prefetch" href="//yourwebsite.com">')])])])]),t._v(" "),s("li",[t._v("预先建立连接\n"),s("ul",[s("li",[s("code",[t._v('<link rel="preconnect" href="//sample.com">')])])])]),t._v(" "),s("li",[t._v("使用 CDN")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(139),alt:"timing"}})]),t._v(" "),s("h2",{attrs:{id:"服务端响应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务端响应","aria-hidden":"true"}},[t._v("#")]),t._v(" 服务端响应")]),t._v(" "),s("ul",[s("li",[t._v("使用流进行响应\n"),s("ul",[s("li",[t._v("现代浏览器都支持根据流的返回形式来逐步进行页面内容的解析、处理。这就意味着，即使请求的响应没有完全结束，浏览器也可以从手里已有的响应结果中进行页面的解析与渲染。")])])]),t._v(" "),s("li",[t._v("业务聚合（BFF 层）")]),t._v(" "),s("li",[t._v("...")])]),t._v(" "),s("h2",{attrs:{id:"页面解析与处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面解析与处理","aria-hidden":"true"}},[t._v("#")]),t._v(" 页面解析与处理")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("资源在页面文档中的位置")]),t._v(" "),s("ul",[s("li",[t._v("JS 可以修改 DOM, 也可以修改 CSS。 根据标准规范，在 JavaScript 中可以访问 DOM。因此当遇到 JavaScript 后会阻塞 DOM 的解析。于此同时，为避免 CSS 与 JavaScript 之间的竞态，CSSOM 的构建会阻塞 JavaScript 的脚本执行。")]),t._v(" "),s("li",[t._v("在最佳实践中，推荐把 CSS 样式表放在 "),s("code",[t._v("<head>")]),t._v(" 之中（即页面的头部），把 JavaScript 脚本放在 "),s("code",[t._v("<body>")]),t._v(" 的最后（即页面的尾部）。")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(140),alt:"render"}})])]),t._v(" "),s("li",[s("p",[t._v("使用 defer 和 async")]),t._v(" "),s("ul",[s("li",[t._v("defer 会在 HTML 解析完成后，按照脚本出现的次序再顺序执行；而 async 则是下载完成就立即开始执行，同时阻塞页面解析，不保证脚本间的执行顺序。")]),t._v(" "),s("li",[t._v("ubt 脚本一般用 async")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(141),alt:"defer"}})])]),t._v(" "),s("li",[s("p",[t._v("页面文档压缩（gzip）")])])]),t._v(" "),s("h2",{attrs:{id:"页面静态资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面静态资源","aria-hidden":"true"}},[t._v("#")]),t._v(" 页面静态资源")]),t._v(" "),s("ul",[s("li",[t._v("减少不必要的请求\n"),s("ul",[s("li",[t._v("浏览器对同源请求有并发上限的限制（例如 Chrome 是6）（HTTP/1.1）")]),t._v(" "),s("li",[t._v("TCP/IP 的拥塞控制也使其传输有慢启动（slow start）的特点，连接刚建立时包体传输速率较低，后续会渐渐提速")])])]),t._v(" "),s("li",[t._v("减少包体大小")]),t._v(" "),s("li",[t._v("降低应用资源时的消耗\n"),s("ul",[s("li",[t._v("CPU 密集计算")]),t._v(" "),s("li",[t._v("频繁 DOM 操作")])])]),t._v(" "),s("li",[t._v("利用缓存")])]),t._v(" "),s("h3",{attrs:{id:"javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),s("ul",[s("li",[t._v("减少不必要的请求\n"),s("ul",[s("li",[s("p",[t._v("代码拆分（code split）和按需加载")]),t._v(" "),s("ul",[s("li",[t._v("思路")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'btn'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" script "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/static/js/toload.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'head'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("webpack 内 dynamic import")]),t._v(" "),s("li",[t._v("AMD(RequireJS)")])])]),t._v(" "),s("li",[s("p",[t._v("代码合并")])])])]),t._v(" "),s("li",[t._v("减少包体大小\n"),s("ul",[s("li",[t._v("代码压缩\n"),s("ul",[s("li",[t._v("UglifyJS")]),t._v(" "),s("li",[t._v("gizp")])])]),t._v(" "),s("li",[t._v("Tree Shaking")]),t._v(" "),s("li",[t._v("优化 polyfill 使用\n"),s("ul",[s("li",[t._v("根据浏览器支持情况来下发 polyfill")])])]),t._v(" "),s("li",[t._v("webpack\n"),s("ul",[s("li",[t._v("webpack-bundle-analyzer 分析各个模块占用大小")])])])])])]),t._v(" "),s("h2",{attrs:{id:"运行时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行时","aria-hidden":"true"}},[t._v("#")]),t._v(" 运行时")]),t._v(" "),s("ul",[s("li",[t._v("注意强制同步布局\n"),s("ul",[s("li",[t._v("避免修改了 dom 再获取 dom 其他属性")])])]),t._v(" "),s("li",[t._v("善用 Composite")]),t._v(" "),s("li",[t._v("长列表优化\n"),s("ul",[s("li",[t._v("虚拟列表实现")])])]),t._v(" "),s("li",[t._v("滚动事件优化\n"),s("ul",[s("li",[t._v("throttle")]),t._v(" "),s("li",[t._v("debounce")])])]),t._v(" "),s("li",[t._v("避免 JS 运行事件过长")])]),t._v(" "),s("h2",{attrs:{id:"预加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预加载","aria-hidden":"true"}},[t._v("#")]),t._v(" 预加载")]),t._v(" "),s("ul",[s("li",[t._v("预加载技术\n"),s("ul",[s("li",[s("p",[t._v("Resource Hints")]),t._v(" "),s("ul",[s("li",[t._v("DNS Prefetch")]),t._v(" "),s("li",[t._v("Preconnect")]),t._v(" "),s("li",[t._v("Prefetch\n"),s("ul",[s("li",[s("code",[t._v('<link rel="prefetch" href="/prefetch.js" as="script">')])])])]),t._v(" "),s("li",[t._v("Prerender\n"),s("ul",[s("li",[s("code",[t._v('<link rel="prerender" href="//sample.com/nextpage.html">')])])])]),t._v(" "),s("li",[t._v("Preload\n"),s("ul",[s("li",[s("code",[t._v('<link rel="preload" href="./nextpage.js" as="script">')])])])])]),t._v(" "),s("p",[t._v("与 Prefetch 相比，Preload 会强制浏览器立即获取资源，并且该请求具有较高的优先级（mandatory and high-priority），因此建议对一些当前页面会马上用到资源使用 Preload；相对的，Prefetch 的资源获取则是可选与较低优先级的，其是否获取完全取决于浏览器的决定，适用于预获取将来可能会用到的资源。")]),t._v(" "),s("ul",[s("li",[t._v("在 webpack 中使用")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// prefetch")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackPrefetch: true */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./sub1.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// preload")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackPreload: true */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./sub2.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("基于 JavaScript 的预加载")]),t._v(" "),s("ul",[s("li",[t._v("图片(不需要插入页面)")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" img "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nimg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/static/img/prefetch.jpg'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("JS、CSS(需要通过 script、link 添加到页面)")])])])])])]),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://alienzhou.github.io/fe-performance-journey/",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能优化"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/54cc04190252",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解浏览器的缓存机制"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);