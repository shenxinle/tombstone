(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{165:function(t,e,a){"use strict";a.r(e);var n=a(0),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom","aria-hidden":"true"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),a("p",[t._v("Document Object Model（文档对象模型）是用来呈现以及与任意 HTML 或 XML文档交互的API。")]),t._v(" "),a("p",[t._v("在DOM编程时，通常使用的最多的就是 Document 和 window 对象。简单的说， window 对象表示浏览器中的内容，而 document 对象是文档本身的根节点。Element 继承了通用的 Node 接口, 将这两个接口结合后就提供了许多方法和属性可以供单个元素使用。在处理这些元素所对应的不同类型的数据时，这些元素可能会有专用的接口，如 table 对象实现了 HTML Table Element Interface。")]),t._v(" "),a("p",[t._v("下面列出一些最常用的 api。")]),t._v(" "),a("h2",{attrs:{id:"常用-dom-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用-dom-api","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用 dom api")]),t._v(" "),a("p",[t._v("Node 继承了 EventTarget； Document、Element、Attr、CharacterData (which Text, Comment, and CDATASection inherit) 等继承了 Node。")]),t._v(" "),a("h3",{attrs:{id:"eventtarget"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eventtarget","aria-hidden":"true"}},[t._v("#")]),t._v(" EventTarget")]),t._v(" "),a("p",[t._v("EventTarget 是一个由可以接收事件的对象实现的接口，并且可以为它们创建侦听器。")]),t._v(" "),a("h4",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("ul",[a("li",[t._v("addEventListener(type, listener, useCapture/options)")]),t._v(" "),a("li",[t._v("removeEventListener(type, listener, useCapture/options)")]),t._v(" "),a("li",[t._v("dispatchEvent(event)")])]),t._v(" "),a("h3",{attrs:{id:"node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node","aria-hidden":"true"}},[t._v("#")]),t._v(" Node")]),t._v(" "),a("h4",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("ul",[a("li",[t._v("nodeName\n"),a("ul",[a("li",[t._v("只读， HTMLElement的名字跟它所关联的标签对应, Text节点对应的是 '#text', 还有Document节点对应的是 '#document'")])])]),t._v(" "),a("li",[t._v("nodeType\n"),a("ul",[a("li",[t._v("只读， 1 元素， 2 属性， 3 文本， 8 注释， 9 文档， 11 fragment")])])]),t._v(" "),a("li",[t._v("nodeValue\n"),a("ul",[a("li",[t._v("返回或设置当前节点的值， 元素节点为 null, 文本节点就是文本值")])])]),t._v(" "),a("li",[t._v("parentNode   "),a("em",[t._v("只读， 返回父节点或null")])]),t._v(" "),a("li",[t._v("parentElement   "),a("em",[t._v("只读，返回一个当前节点的父节点 Element 。 如果当前节点没有父节点或者说父节点不是一个元素(Element), 这个属性返回null")])]),t._v(" "),a("li",[t._v("previousSibling   "),a("em",[t._v("只读，返回一个当前节点同级的前一个结点或null")])]),t._v(" "),a("li",[t._v("nextSibling   "),a("em",[t._v("只读，返回与该节点同级的下一个节点 Node，如果没有返回null")])]),t._v(" "),a("li",[t._v("childNodes   "),a("em",[t._v("只读，返回一个包含了该节点所有子节点的实时的NodeList")])]),t._v(" "),a("li",[t._v("firstChild   "),a("em",[t._v("只读，返回该节点的第一个子节点Node或null")])]),t._v(" "),a("li",[t._v("lastChild    "),a("em",[t._v("只读，返回该节点的最后一个子节点Node或null")])]),t._v(" "),a("li",[t._v("textContent    "),a("em",[t._v("返回或设置一个元素内所有子结点及其后代的文本内容")])])]),t._v(" "),a("h4",{attrs:{id:"方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("ul",[a("li",[t._v("appendChild(childNode)\n"),a("ul",[a("li",[t._v("将指定的 childNode 参数作为最后一个子节点添加到当前节点。")]),t._v(" "),a("li",[t._v("如果参数引用了 DOM 树上的现有节点，则节点将从当前位置分离，并附加到新位置。")])])]),t._v(" "),a("li",[t._v("cloneNode(deep)\n"),a("ul",[a("li",[t._v("克隆一个 Node，并且可以选择是否克隆这个节点下的所有内容")])])]),t._v(" "),a("li",[t._v("contains(node)\n"),a("ul",[a("li",[t._v("包含，包括是本身时，返回 true")])])]),t._v(" "),a("li",[t._v("getRootNode()  "),a("em",[t._v("正产文档中为 document")])]),t._v(" "),a("li",[t._v("hasChildNodes()\n"),a("ul",[a("li",[t._v("等价于 node.firstChild !== null 或 node.childNodes.length > 0")])])]),t._v(" "),a("li",[t._v("parentNode.insertBefore(newNode, referenceNode)")]),t._v(" "),a("li",[t._v("parentNode.removeChild(childNode)")]),t._v(" "),a("li",[t._v("parentNode.replaceChild(newChild, oldChild)")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移除所有子节点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeAllChildren")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历节点树")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eachNodeTree")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("childNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eachNodeTree")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("childNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"nodelist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodelist","aria-hidden":"true"}},[t._v("#")]),t._v(" NodeList")]),t._v(" "),a("p",[t._v("NodeList 对象是一个节点的集合，是由 Node.childNodes 和 document.querySelectorAll 返回的.")]),t._v(" "),a("p",[t._v("在一些情况下，NodeList 对象是一个实时集合，也就是说，如果文档中的节点树发生变化，则已经存在的实时 NodeList 对象也会随之变化。例如，Node.childNodes 是实时的")]),t._v(" "),a("ul",[a("li",[t._v("属性和方法\n"),a("ul",[a("li",[t._v("length")]),t._v(" "),a("li",[t._v("item(index)")])])]),t._v(" "),a("li",[t._v("遍历\n"),a("ul",[a("li",[t._v("for 循环")]),t._v(" "),a("li",[t._v("Array.prototype.forEach.call(nodeList, node => {...})")])])])]),t._v(" "),a("h3",{attrs:{id:"element"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#element","aria-hidden":"true"}},[t._v("#")]),t._v(" Element")]),t._v(" "),a("h4",{attrs:{id:"属性-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("ul",[a("li",[t._v("tagName  "),a("em",[t._v("只读")])]),t._v(" "),a("li",[t._v("attributes  "),a("em",[t._v("只读")])]),t._v(" "),a("li",[t._v("id")]),t._v(" "),a("li",[t._v("className")]),t._v(" "),a("li",[t._v("classList  "),a("em",[t._v("只读")]),t._v(" "),a("ul",[a("li",[t._v("value")]),t._v(" "),a("li",[t._v("item(index)")]),t._v(" "),a("li",[t._v("add(str1, ...)")]),t._v(" "),a("li",[t._v("remove(str1, ..)")]),t._v(" "),a("li",[t._v("toggle(str)")]),t._v(" "),a("li",[t._v("contains(str)")]),t._v(" "),a("li",[t._v("replace(oldClass, newClass)")])])]),t._v(" "),a("li",[t._v("clientWidth / clientHeight  "),a("em",[t._v("只读，截止内边距，四舍五入到整数，内联及没有 CSS 样式的元素为 0")])]),t._v(" "),a("li",[t._v("scrollWidth / scrollHeight  "),a("em",[t._v("只读")])]),t._v(" "),a("li",[t._v("scrollLeft / scrollTop")]),t._v(" "),a("li",[t._v("innerHTML")]),t._v(" "),a("li",[t._v("outHTML")])]),t._v(" "),a("h4",{attrs:{id:"方法-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法-3","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("ul",[a("li",[t._v("getElementsByClassName(name)  "),a("em",[t._v("返回一个即时更新的（live） HTMLCollection")])]),t._v(" "),a("li",[t._v("getElementsByTagName(tagName)  "),a("em",[t._v("返回一个动态的包含所有指定标签名的元素的HTML集合HTMLCollection")])]),t._v(" "),a("li",[t._v("querySelector(selector)")]),t._v(" "),a("li",[t._v("querySelectorAll(selector)  "),a("em",[t._v("返回一个non-live的NodeList")])]),t._v(" "),a("li",[t._v("getAttribute(attrName)")]),t._v(" "),a("li",[t._v("hasAttribute(attrName)")]),t._v(" "),a("li",[t._v("setAttribute(attrName, value)")]),t._v(" "),a("li",[t._v("removeAttribute(attrName)")]),t._v(" "),a("li",[t._v("toggleAttribute(attrName, force)")]),t._v(" "),a("li",[t._v("getAttributeNames()")]),t._v(" "),a("li",[t._v("getBoundingClientRect()\n"),a("ul",[a("li",[t._v("{top, bottom, left, right, width, height, x, y}")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDOMClientRect",target:"_blank",rel:"noopener noreferrer"}},[t._v("解释"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[t._v("scrollIntoView()\n"),a("ul",[a("li",[t._v("有兼容性， "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollIntoView",target:"_blank",rel:"noopener noreferrer"}},[t._v("解释"),a("OutboundLink")],1)])])])]),t._v(" "),a("h3",{attrs:{id:"document"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#document","aria-hidden":"true"}},[t._v("#")]),t._v(" Document")]),t._v(" "),a("ul",[a("li",[t._v("getElementById(id)")]),t._v(" "),a("li",[t._v("getElementsByClassName(name)")]),t._v(" "),a("li",[t._v("getElementsByTagName(tagName)")]),t._v(" "),a("li",[t._v("querySelector(selector)")]),t._v(" "),a("li",[t._v("querySelectorAll(selector)")]),t._v(" "),a("li",[t._v("createTextNode(data)")]),t._v(" "),a("li",[t._v("createElement(tagName[, options])")]),t._v(" "),a("li",[t._v("createDocumentFragment()")]),t._v(" "),a("li",[t._v("createComment(data)")]),t._v(" "),a("li",[t._v("...")])]),t._v(" "),a("h2",{attrs:{id:"参考文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文档","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document_Object_Model/Introduction",target:"_blank",rel:"noopener noreferrer"}},[t._v("DOM概述"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);